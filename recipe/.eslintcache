[{"D:\\Practice\\test\\recipeTest\\recipe\\src\\index.js":"1","D:\\Practice\\test\\recipeTest\\recipe\\src\\App.js":"2","D:\\Practice\\test\\recipeTest\\recipe\\src\\reportWebVitals.js":"3","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Layout.js":"4","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Landing\\index.js":"5","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Detail\\index.js":"6","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Recipes.js":"7","D:\\Practice\\test\\recipeTest\\recipe\\src\\api\\sourceAPI.js":"8","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Detail\\Modal\\DetailModal.js":"9","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\index.js":"10","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\Ingredients\\Ingredients.js":"11","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\Direction\\Direction.js":"12"},{"size":257,"mtime":1607602129624,"results":"13","hashOfConfig":"14"},{"size":156,"mtime":1607574097852,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":891,"mtime":1607596695020,"results":"17","hashOfConfig":"14"},{"size":2286,"mtime":1607602319515,"results":"18","hashOfConfig":"14"},{"size":8004,"mtime":1607602276969,"results":"19","hashOfConfig":"14"},{"size":855,"mtime":1607586607048,"results":"20","hashOfConfig":"14"},{"size":102,"mtime":1607577398210,"results":"21","hashOfConfig":"14"},{"size":2127,"mtime":1607602179601,"results":"22","hashOfConfig":"14"},{"size":13788,"mtime":1607602294813,"results":"23","hashOfConfig":"14"},{"size":6678,"mtime":1607597151610,"results":"24","hashOfConfig":"14"},{"size":6146,"mtime":1607597170541,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1urkbu1",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},"D:\\Practice\\test\\recipeTest\\recipe\\src\\index.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\App.js",[],["55","56"],"D:\\Practice\\test\\recipeTest\\recipe\\src\\reportWebVitals.js",[],["57","58"],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Layout.js",["59","60"],"\r\nimport {Row, Col , Button} from 'antd';\r\nimport React, { Component} from 'react';\r\nimport './Layout.css';\r\n\r\nclass Layout extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"landing-container\">\r\n                \r\n            {/* <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div className=\"landing-title\">\r\n                            <span>Recipes</span>\r\n                        </div>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </div> */}\r\n            <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                            {this.props.children}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout;\r\n","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Landing\\index.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Detail\\index.js",["61","62"],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Recipes.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\api\\sourceAPI.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Detail\\Modal\\DetailModal.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\index.js",["63","64","65","66","67","68","69"],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\Ingredients\\Ingredients.js",["70"],"import React from 'react';\r\nimport { Row, Col, Modal, Button , Input ,Form} from 'antd';\r\nimport './Ingredients.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Ingredients extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Ingredients: {\r\n                uuid: uuidv4(),\r\n                amount: \"\",\r\n                measurement: \"\",\r\n                name: \"\"\r\n            }\r\n        };\r\n    }\r\n    handleCancel = () => {\r\n        this.props.handleCloseModalIngredients();\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            Ingredients: {\r\n                ...this.state.Ingredients,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleButtonClick =() =>{\r\n        this.props.addIngredients(this.state.Ingredients);\r\n        this.setState({\r\n            Ingredients: {\r\n                amount: \"\",\r\n                measurement: \"\",\r\n                name: \"\"\r\n            }\r\n        })\r\n        toast.success(\"Added\");\r\n        this.props.handleCloseModalIngredients();\r\n    }\r\n\r\n    render() {\r\n\r\n        let {\r\n            amount,\r\n            measurement,\r\n            name,\r\n        } = this.state.Ingredients;\r\n\r\n        const validateMessages = {\r\n            required: \"Required field!\",\r\n            types: {\r\n                number: \"is not a validate number!\",\r\n            },\r\n            number: {\r\n                range: \"must be between ${min} and ${max}\",\r\n            },\r\n        };\r\n        return (\r\n            <Modal\r\n                className=\"detail-modal-container\"\r\n                closable={true}\r\n                visible={this.props.isModalActiveIngredients}\r\n                onCancel={this.handleCancel}\r\n                centered\r\n                footer={\r\n                    null\r\n                }\r\n            >\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-title\">\r\n                                        <span>Add new Ingredients</span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-inputs\">\r\n                                        <Input name=\"amount\" value={amount} onChange={this.handleChange} placeholder=\"amount\"></Input>\r\n                                        <Input name=\"measurement\" value={measurement} onChange={this.handleChange} placeholder=\"measurement\"></Input>\r\n                                        <Input name=\"name\" value={name} onChange={this.handleChange} placeholder=\"name\"></Input>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row> */}\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                <Form\r\n                                        className=\"ingredients-form\"\r\n                                        labelCol={{ xs: 24 }}\r\n                                        wrapperCol={{ xs: 24 }}\r\n                                        name=\"newIngredients\"\r\n                                        scrollToFirstError\r\n                                        validateMessages={validateMessages}\r\n                                        onFinish={this.handleButtonClick}\r\n                                    >\r\n                                        <Form.Item\r\n                                            name=\"amount\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <div>\r\n                                                <Input name=\"amount\" value={amount} onChange={this.handleChange} placeholder=\"amount\"></Input>\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name=\"measurement\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <div>\r\n                                            <Input name=\"measurement\" value={measurement} onChange={this.handleChange} placeholder=\"measurement\"></Input>\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name=\"name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <div>\r\n                                            <Input name=\"name\" value={name} onChange={this.handleChange} placeholder=\"name\"></Input>\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                    type=\"primary\"\r\n                                                    htmlType=\"submit\"\r\n                                                >\r\n                                                    Submit\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Ingredients\r\n\r\n","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\Direction\\Direction.js",["71","72"],"import React from 'react';\r\nimport { Row, Col, Modal, Button , Input ,Form , Switch} from 'antd';\r\nimport './Direction.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Direction extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            direction: {\r\n                uuid: uuidv4(),\r\n                instructions: \"\",\r\n                optional: true,\r\n            }\r\n        };\r\n    }\r\n    handleCancel = () => {\r\n        this.props.handleCloseModalDirection();\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            direction: {\r\n                ...this.state.direction,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleButtonClick =() =>{\r\n        this.props.addDirection(this.state.direction)\r\n        this.setState({\r\n            direction: {\r\n                instructions: \"\",\r\n                optional: true,\r\n            }\r\n        })\r\n        toast.success(\"Added\");\r\n        this.props.handleCloseModalDirection();\r\n    }\r\n    handleOptional = () => {\r\n        this.setState({\r\n            direction:{\r\n                ...this.state.direction,\r\n                optional : !this.state.direction.optional\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n\r\n        let {\r\n            instructions,\r\n            optional\r\n        } = this.state.direction;\r\n\r\n        const validateMessages = {\r\n            required: \"Required field!\",\r\n            types: {\r\n                number: \"is not a validate number!\",\r\n            },\r\n            number: {\r\n                range: \"must be between ${min} and ${max}\",\r\n            },\r\n        };\r\n        return (\r\n            <Modal\r\n                className=\"detail-modal-container\"\r\n                closable={true}\r\n                visible={this.props.isModalActiveDirection}\r\n                onCancel={this.handleCancel}\r\n                centered\r\n                footer={\r\n                    null\r\n                }\r\n            >\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-title\">\r\n                                        <span>Add new Direction</span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-inputs\">\r\n                                        <Input name=\"amount\" value={amount} onChange={this.handleChange} placeholder=\"amount\"></Input>\r\n                                        <Input name=\"measurement\" value={measurement} onChange={this.handleChange} placeholder=\"measurement\"></Input>\r\n                                        <Input name=\"name\" value={name} onChange={this.handleChange} placeholder=\"name\"></Input>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row> */}\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                <Form\r\n                                        className=\"Direction-form\"\r\n                                        labelCol={{ xs: 24 }}\r\n                                        wrapperCol={{ xs: 24 }}\r\n                                        name=\"newDirection\"\r\n                                        scrollToFirstError\r\n                                        validateMessages={validateMessages}\r\n                                        onFinish={this.handleButtonClick}\r\n                                    >\r\n                                        <Form.Item\r\n                                            name=\"amount\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <div>\r\n                                                <Input name=\"instructions\" value={instructions} onChange={this.handleChange} placeholder=\"instructions\"></Input>\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name=\"optional\"\r\n                                        >\r\n                                            <div>\r\n                                            <Switch\r\n                                                checkedChildren={<CheckOutlined />}\r\n                                                unCheckedChildren={<CloseOutlined />}\r\n                                                defaultChecked={true}\r\n                                                onChange\r\n                                            />\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                    type=\"primary\"\r\n                                                    htmlType=\"submit\"\r\n                                                >\r\n                                                    Submit\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Direction\r\n\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":20,"nodeType":"81","messageId":"82","endLine":2,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":7,"column":5,"nodeType":"85","messageId":"86","endLine":9,"endColumn":6},{"ruleId":"79","severity":1,"message":"87","line":33,"column":19,"nodeType":"81","messageId":"82","endLine":33,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":53,"column":60,"nodeType":"90","messageId":"91","endLine":53,"endColumn":62},{"ruleId":"79","severity":1,"message":"92","line":2,"column":26,"nodeType":"81","messageId":"82","endLine":2,"endColumn":31},{"ruleId":"79","severity":1,"message":"93","line":2,"column":48,"nodeType":"81","messageId":"82","endLine":2,"endColumn":54},{"ruleId":"79","severity":1,"message":"94","line":9,"column":10,"nodeType":"81","messageId":"82","endLine":9,"endColumn":15},{"ruleId":"79","severity":1,"message":"95","line":41,"column":19,"nodeType":"81","messageId":"82","endLine":41,"endColumn":28},{"ruleId":"79","severity":1,"message":"96","line":103,"column":19,"nodeType":"81","messageId":"82","endLine":103,"endColumn":27},{"ruleId":"79","severity":1,"message":"96","line":107,"column":23,"nodeType":"81","messageId":"82","endLine":107,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":159,"column":24,"nodeType":"99","messageId":"100","endLine":159,"endColumn":59},{"ruleId":"97","severity":1,"message":"98","line":58,"column":24,"nodeType":"99","messageId":"100","endLine":58,"endColumn":59},{"ruleId":"79","severity":1,"message":"101","line":54,"column":13,"nodeType":"81","messageId":"82","endLine":54,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":63,"column":24,"nodeType":"99","messageId":"100","endLine":63,"endColumn":59},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'recipeFilter' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Modal' is defined but never used.","'Select' is defined but never used.","'toast' is defined but never used.","'idChecker' is assigned a value but never used.","'response' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'optional' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]