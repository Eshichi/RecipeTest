[{"D:\\Practice\\test\\recipeTest\\recipe\\src\\index.js":"1","D:\\Practice\\test\\recipeTest\\recipe\\src\\App.js":"2","D:\\Practice\\test\\recipeTest\\recipe\\src\\reportWebVitals.js":"3","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Layout.js":"4","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Landing\\index.js":"5","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Detail\\index.js":"6","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Recipes.js":"7","D:\\Practice\\test\\recipeTest\\recipe\\src\\api\\sourceAPI.js":"8","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Detail\\Modal\\DetailModal.js":"9","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\index.js":"10","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\Ingredients\\Ingredients.js":"11","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\Direction\\Direction.js":"12"},{"size":501,"mtime":1607579666529,"results":"13","hashOfConfig":"14"},{"size":156,"mtime":1607574097852,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":891,"mtime":1607596695020,"results":"17","hashOfConfig":"14"},{"size":2194,"mtime":1607596734398,"results":"18","hashOfConfig":"14"},{"size":8239,"mtime":1607596791967,"results":"19","hashOfConfig":"14"},{"size":855,"mtime":1607586607048,"results":"20","hashOfConfig":"14"},{"size":102,"mtime":1607577398210,"results":"21","hashOfConfig":"14"},{"size":2150,"mtime":1607584854469,"results":"22","hashOfConfig":"14"},{"size":11605,"mtime":1607598259967,"results":"23","hashOfConfig":"14"},{"size":6678,"mtime":1607597151610,"results":"24","hashOfConfig":"14"},{"size":6146,"mtime":1607597170541,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1urkbu1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"D:\\Practice\\test\\recipeTest\\recipe\\src\\index.js",[],["57","58"],"D:\\Practice\\test\\recipeTest\\recipe\\src\\App.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\reportWebVitals.js",[],["59","60"],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Layout.js",["61","62"],"\r\nimport {Row, Col , Button} from 'antd';\r\nimport React, { Component} from 'react';\r\nimport './Layout.css';\r\n\r\nclass Layout extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"landing-container\">\r\n                \r\n            {/* <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div className=\"landing-title\">\r\n                            <span>Recipes</span>\r\n                        </div>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </div> */}\r\n            <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                            {this.props.children}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout;\r\n","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Landing\\index.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Detail\\index.js",["63","64","65","66","67","68"],"\r\nimport React, { Component, Fragment} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Row, Col ,Card ,Checkbox , Button , List, Typography, Divider} from 'antd';\r\nimport './Detail.css';\r\nimport sourceAPI from '../../api/sourceAPI';\r\nimport { PlusOutlined  } from '@ant-design/icons';\r\nimport DetailModal from './Modal/DetailModal';\r\nimport { StarOutlined, StarFilled, StarTwoTone } from '@ant-design/icons';\r\n\r\nclass Detail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookTime : 0,\r\n            description : '',\r\n            direction: [],\r\n            editDate : '',\r\n            images : [],\r\n            ingredients: [],\r\n            postDate:  '',\r\n            prepTime: '',\r\n            servings: '',\r\n            title: '',\r\n            firstRender: true,\r\n            isModalActive: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = async() =>{\r\n        if(this.state.firstRender){\r\n            const response = await sourceAPI.get(`/recipes`);\r\n            const resSpecials = await sourceAPI.get(`/specials`);\r\n            const recipeFilter = response.data.forEach(item => {\r\n                if(item.uuid === this.props.match.params.uuid){\r\n                    resSpecials.data.forEach(spItem => {\r\n                            this.setState({\r\n                                cookTime : item.cookTime,\r\n                                description : item.description,\r\n                                direction: item.directions,\r\n                                editDate : item.editDate,\r\n                                images : item.images,\r\n                                ingredients: item.ingredients,\r\n                                postDate:  item.postDate,\r\n                                prepTime: item.prepTime,\r\n                                servings: item.servings,\r\n                                title: item.title,\r\n                                firstRender: false,     \r\n                            })\r\n\r\n                        item.ingredients.forEach(ingredient => {\r\n                            if(ingredient.uuid === spItem.ingredientId){\r\n                                let existingData = this.state.ingredients.find((ingredient) => {\r\n                                    return ingredient.uuid == spItem.ingredientId\r\n                                })\r\n                                existingData.title = spItem.title;\r\n                                existingData.type = spItem.type;\r\n                                existingData.text = spItem.text;\r\n\r\n                                this.setState({\r\n                                    ingredients : this.state.ingredients\r\n                                })\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    \r\n    handleOpenModal =() =>{\r\n        this.setState({\r\n            isModalActive : true\r\n        })\r\n    }\r\n\r\n    handleCloseModal =() =>{\r\n        this.setState({\r\n            isModalActive : false\r\n        })\r\n    }\r\n    render(){\r\n        console.log(this.state.ingredients)\r\n\r\n        const ingredientsList = this.state.ingredients.map((ingredient , index) => {\r\n            const cardTitle = <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                    {ingredient.title ? <Fragment> <span> {ingredient.title} </span>  <StarOutlined /> </Fragment>  : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                    <span>{ingredient.name}</span>  <Checkbox />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            return(\r\n                <Col key={index} span={4}>\r\n                    <div className={ingredient.type ? \"special-ingredients-card\" : \"ingredients-card\"}>\r\n                        <Card title={cardTitle} bordered={true}>\r\n                            {ingredient.text ?\r\n                                <div className=\"special-ingredients-text\">\r\n                                    <span> {ingredient.text}</span> \r\n                                </div> : null\r\n                                }\r\n                            <div className=\"ingredients-details\">\r\n                                <span>amount : {ingredient.amount}</span>\r\n                                <span>measurement: {ingredient.measurement ? ingredient.measurement : \"not indicated\"}</span>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return(\r\n        <div>\r\n            <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div className=\"landing-title\">\r\n                            <span>Details</span>\r\n                        </div>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </div>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <div className=\"detail-image\">\r\n                                    { this.state.images.full ? <img alt=\"example\" src={`http://localhost:3001/${this.state.images.full}`} /> : null}\r\n                                    \r\n                                </div>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div className=\"detail-description\">\r\n                                    <span>{this.state.title}</span>\r\n                                    <span>{this.state.description}</span>\r\n                                    <span>Prep time  : {this.state.prepTime} minutes</span>\r\n                                    <span>Cook time : {this.state.cookTime} minutes</span>\r\n                                    <span>Number of servings : {this.state.servings}</span>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <div className=\"detail-ingredients\">\r\n                                    <Row>\r\n                                        {ingredientsList}\r\n                                        {/* <Button onClick={this.handleOpenModal}><PlusOutlined /></Button> */}\r\n                                    </Row>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <div className=\"detail-direction\">\r\n                                <List\r\n                                    header={<div className=\"direction-title\">Directions: </div>}\r\n                                    footer={null}\r\n                                    bordered\r\n                                    dataSource={this.state.direction}\r\n                                    renderItem={(direction , index)=> (\r\n                                        <List.Item>\r\n                                        <Typography.Text mark>Step  {index + 1}:</Typography.Text> <span>{`[${direction.optional ?  \"Optional\" : \"Not optional\"}] : ${direction.instructions} `} </span>\r\n                                        </List.Item>\r\n                                    )}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <div className=\"detail-back\">\r\n                                    <Link to=\"/\"><Button>Back to recipe list</Button></Link>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <DetailModal isModalActive={this.state.isModalActive} handleCloseModal={this.handleCloseModal}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Detail;\r\n","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Recipes.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\api\\sourceAPI.js",[],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\Detail\\Modal\\DetailModal.js",["69","70"],"import React from 'react';\r\nimport { Row, Col, Modal, Button, Pagination, Collapse , Input} from 'antd';\r\nimport './DetailModal.css'\r\n\r\n\r\nclass DetailModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    handleCancel = () => {\r\n        this.props.handleCloseModal();\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Modal\r\n                className=\"detail-modal-container\"\r\n                closable={true}\r\n                visible={this.props.isModalActive}\r\n                onCancel={this.handleCancel}\r\n                centered\r\n                footer={\r\n                    null\r\n                }\r\n            >\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-title\">\r\n                                        <span>Add new ingredient</span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-inputs\">\r\n                                        <Input placeholder=\"Name\"/>\r\n                                        <Input placeholder=\"amount\"/>\r\n                                        <Input placeholder=\"measurement\"/>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-button\">\r\n                                        <Button>Submit</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DetailModal\r\n\r\n","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\index.js",["71","72","73","74"],"D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\Ingredients\\Ingredients.js",["75"],"import React from 'react';\r\nimport { Row, Col, Modal, Button , Input ,Form} from 'antd';\r\nimport './Ingredients.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Ingredients extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Ingredients: {\r\n                uuid: uuidv4(),\r\n                amount: \"\",\r\n                measurement: \"\",\r\n                name: \"\"\r\n            }\r\n        };\r\n    }\r\n    handleCancel = () => {\r\n        this.props.handleCloseModalIngredients();\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            Ingredients: {\r\n                ...this.state.Ingredients,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleButtonClick =() =>{\r\n        this.props.addIngredients(this.state.Ingredients);\r\n        this.setState({\r\n            Ingredients: {\r\n                amount: \"\",\r\n                measurement: \"\",\r\n                name: \"\"\r\n            }\r\n        })\r\n        toast.success(\"Added\");\r\n        this.props.handleCloseModalIngredients();\r\n    }\r\n\r\n    render() {\r\n\r\n        let {\r\n            amount,\r\n            measurement,\r\n            name,\r\n        } = this.state.Ingredients;\r\n\r\n        const validateMessages = {\r\n            required: \"Required field!\",\r\n            types: {\r\n                number: \"is not a validate number!\",\r\n            },\r\n            number: {\r\n                range: \"must be between ${min} and ${max}\",\r\n            },\r\n        };\r\n        return (\r\n            <Modal\r\n                className=\"detail-modal-container\"\r\n                closable={true}\r\n                visible={this.props.isModalActiveIngredients}\r\n                onCancel={this.handleCancel}\r\n                centered\r\n                footer={\r\n                    null\r\n                }\r\n            >\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-title\">\r\n                                        <span>Add new Ingredients</span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-inputs\">\r\n                                        <Input name=\"amount\" value={amount} onChange={this.handleChange} placeholder=\"amount\"></Input>\r\n                                        <Input name=\"measurement\" value={measurement} onChange={this.handleChange} placeholder=\"measurement\"></Input>\r\n                                        <Input name=\"name\" value={name} onChange={this.handleChange} placeholder=\"name\"></Input>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row> */}\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                <Form\r\n                                        className=\"ingredients-form\"\r\n                                        labelCol={{ xs: 24 }}\r\n                                        wrapperCol={{ xs: 24 }}\r\n                                        name=\"newIngredients\"\r\n                                        scrollToFirstError\r\n                                        validateMessages={validateMessages}\r\n                                        onFinish={this.handleButtonClick}\r\n                                    >\r\n                                        <Form.Item\r\n                                            name=\"amount\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <div>\r\n                                                <Input name=\"amount\" value={amount} onChange={this.handleChange} placeholder=\"amount\"></Input>\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name=\"measurement\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <div>\r\n                                            <Input name=\"measurement\" value={measurement} onChange={this.handleChange} placeholder=\"measurement\"></Input>\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name=\"name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <div>\r\n                                            <Input name=\"name\" value={name} onChange={this.handleChange} placeholder=\"name\"></Input>\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                    type=\"primary\"\r\n                                                    htmlType=\"submit\"\r\n                                                >\r\n                                                    Submit\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Ingredients\r\n\r\n","D:\\Practice\\test\\recipeTest\\recipe\\src\\components\\NewItem\\Direction\\Direction.js",["76","77"],"import React from 'react';\r\nimport { Row, Col, Modal, Button , Input ,Form , Switch} from 'antd';\r\nimport './Direction.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Direction extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            direction: {\r\n                uuid: uuidv4(),\r\n                instructions: \"\",\r\n                optional: true,\r\n            }\r\n        };\r\n    }\r\n    handleCancel = () => {\r\n        this.props.handleCloseModalDirection();\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            direction: {\r\n                ...this.state.direction,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleButtonClick =() =>{\r\n        this.props.addDirection(this.state.direction)\r\n        this.setState({\r\n            direction: {\r\n                instructions: \"\",\r\n                optional: true,\r\n            }\r\n        })\r\n        toast.success(\"Added\");\r\n        this.props.handleCloseModalDirection();\r\n    }\r\n    handleOptional = () => {\r\n        this.setState({\r\n            direction:{\r\n                ...this.state.direction,\r\n                optional : !this.state.direction.optional\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n\r\n        let {\r\n            instructions,\r\n            optional\r\n        } = this.state.direction;\r\n\r\n        const validateMessages = {\r\n            required: \"Required field!\",\r\n            types: {\r\n                number: \"is not a validate number!\",\r\n            },\r\n            number: {\r\n                range: \"must be between ${min} and ${max}\",\r\n            },\r\n        };\r\n        return (\r\n            <Modal\r\n                className=\"detail-modal-container\"\r\n                closable={true}\r\n                visible={this.props.isModalActiveDirection}\r\n                onCancel={this.handleCancel}\r\n                centered\r\n                footer={\r\n                    null\r\n                }\r\n            >\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-title\">\r\n                                        <span>Add new Direction</span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"detail-modal-inputs\">\r\n                                        <Input name=\"amount\" value={amount} onChange={this.handleChange} placeholder=\"amount\"></Input>\r\n                                        <Input name=\"measurement\" value={measurement} onChange={this.handleChange} placeholder=\"measurement\"></Input>\r\n                                        <Input name=\"name\" value={name} onChange={this.handleChange} placeholder=\"name\"></Input>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row> */}\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                <Form\r\n                                        className=\"Direction-form\"\r\n                                        labelCol={{ xs: 24 }}\r\n                                        wrapperCol={{ xs: 24 }}\r\n                                        name=\"newDirection\"\r\n                                        scrollToFirstError\r\n                                        validateMessages={validateMessages}\r\n                                        onFinish={this.handleButtonClick}\r\n                                    >\r\n                                        <Form.Item\r\n                                            name=\"amount\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <div>\r\n                                                <Input name=\"instructions\" value={instructions} onChange={this.handleChange} placeholder=\"instructions\"></Input>\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name=\"optional\"\r\n                                        >\r\n                                            <div>\r\n                                            <Switch\r\n                                                checkedChildren={<CheckOutlined />}\r\n                                                unCheckedChildren={<CloseOutlined />}\r\n                                                defaultChecked={true}\r\n                                                onChange\r\n                                            />\r\n                                            </div>\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                    type=\"primary\"\r\n                                                    htmlType=\"submit\"\r\n                                                >\r\n                                                    Submit\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Direction\r\n\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":20,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":7,"column":5,"nodeType":"90","messageId":"91","endLine":9,"endColumn":6},{"ruleId":"84","severity":1,"message":"92","line":4,"column":63,"nodeType":"86","messageId":"87","endLine":4,"endColumn":70},{"ruleId":"84","severity":1,"message":"93","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":22},{"ruleId":"84","severity":1,"message":"94","line":9,"column":24,"nodeType":"86","messageId":"87","endLine":9,"endColumn":34},{"ruleId":"84","severity":1,"message":"95","line":9,"column":36,"nodeType":"86","messageId":"87","endLine":9,"endColumn":47},{"ruleId":"84","severity":1,"message":"96","line":34,"column":19,"nodeType":"86","messageId":"87","endLine":34,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":54,"column":60,"nodeType":"99","messageId":"100","endLine":54,"endColumn":62},{"ruleId":"84","severity":1,"message":"101","line":2,"column":35,"nodeType":"86","messageId":"87","endLine":2,"endColumn":45},{"ruleId":"84","severity":1,"message":"102","line":2,"column":47,"nodeType":"86","messageId":"87","endLine":2,"endColumn":55},{"ruleId":"84","severity":1,"message":"103","line":2,"column":26,"nodeType":"86","messageId":"87","endLine":2,"endColumn":31},{"ruleId":"84","severity":1,"message":"104","line":2,"column":48,"nodeType":"86","messageId":"87","endLine":2,"endColumn":54},{"ruleId":"84","severity":1,"message":"105","line":9,"column":10,"nodeType":"86","messageId":"87","endLine":9,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":108,"column":24,"nodeType":"108","messageId":"109","endLine":108,"endColumn":59},{"ruleId":"106","severity":1,"message":"107","line":58,"column":24,"nodeType":"108","messageId":"109","endLine":58,"endColumn":59},{"ruleId":"84","severity":1,"message":"110","line":54,"column":13,"nodeType":"86","messageId":"87","endLine":54,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":63,"column":24,"nodeType":"108","messageId":"109","endLine":63,"endColumn":59},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Divider' is defined but never used.","'PlusOutlined' is defined but never used.","'StarFilled' is defined but never used.","'StarTwoTone' is defined but never used.","'recipeFilter' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Pagination' is defined but never used.","'Collapse' is defined but never used.","'Modal' is defined but never used.","'Select' is defined but never used.","'toast' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'optional' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]